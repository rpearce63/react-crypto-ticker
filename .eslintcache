[{"/Users/rick/dev/react/react_bitcoin_ticker/src/index.js":"1","/Users/rick/dev/react/react_bitcoin_ticker/src/serviceWorker.js":"2","/Users/rick/dev/react/react_bitcoin_ticker/src/App.js":"3","/Users/rick/dev/react/react_bitcoin_ticker/src/components/Header.js":"4","/Users/rick/dev/react/react_bitcoin_ticker/src/components/ChartViewer.js":"5","/Users/rick/dev/react/react_bitcoin_ticker/src/components/Body.js":"6","/Users/rick/dev/react/react_bitcoin_ticker/src/components/Body-WSS.js":"7","/Users/rick/dev/react/react_bitcoin_ticker/src/components/utils.js":"8","/Users/rick/dev/react/react_bitcoin_ticker/src/components/PriceCard.js":"9","/Users/rick/dev/react/react_bitcoin_ticker/src/components/coinbase.api.js":"10","/Users/rick/dev/react/react_bitcoin_ticker/src/components/ChartJs.js":"11"},{"size":341,"mtime":1610426392298,"results":"12","hashOfConfig":"13"},{"size":4948,"mtime":1609189511897,"results":"14","hashOfConfig":"13"},{"size":753,"mtime":1612631381903,"results":"15","hashOfConfig":"13"},{"size":695,"mtime":1610490410341,"results":"16","hashOfConfig":"13"},{"size":1875,"mtime":1609252207030,"results":"17","hashOfConfig":"13"},{"size":5998,"mtime":1610489951772,"results":"18","hashOfConfig":"13"},{"size":7022,"mtime":1612731421773,"results":"19","hashOfConfig":"13"},{"size":907,"mtime":1610981123601,"results":"20","hashOfConfig":"13"},{"size":757,"mtime":1612129963088,"results":"21","hashOfConfig":"13"},{"size":805,"mtime":1612732598566,"results":"22","hashOfConfig":"13"},{"size":1656,"mtime":1612723554813,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cdzddj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rick/dev/react/react_bitcoin_ticker/src/index.js",[],["48","49"],"/Users/rick/dev/react/react_bitcoin_ticker/src/serviceWorker.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/App.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/Header.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/ChartViewer.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/Body.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/Body-WSS.js",["50","51","52"],"import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef,\n} from \"react\";\nimport PriceCard from \"./PriceCard\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport { clientDateTime, getElapsedTime } from \"./utils\";\n\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport Duration from \"dayjs/plugin/duration\";\nimport { getAccounts } from \"./coinbase.api\";\n\ndayjs.extend(Duration);\nrequire(\"log-timestamp\")(function () {\n  return `[${dayjs().format(\"YYYY-MM-DD HH:mm:ss\")}]`;\n});\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nlet chartRef = null;\nlet startTime = null;\nlet stopTime = null;\n\nconst BodyWSS = () => {\n  const ws = useRef(null);\n  const [btc, setBtc] = useState(0);\n  const [xrp, setXrp] = useState(0);\n  const [eth, setEth] = useState(0);\n  const [doge, setDoge] = useState(0);\n  const [balances, setBalances] = useState({ BTC: 0.0, ETH: 0.0 });\n  const [showChart, toggleChart] = useState(false);\n\n  //const [usd, setUsd] = useState(0);\n\n  const dataSource = useRef({\n    chart: {\n      caption: \"Crypto Ticker\",\n      subCaption: \"\",\n      xAxisName: \"Local Time\",\n      yAxisName: \"USD\",\n      numberPrefix: \"$\",\n      refreshinterval: \"1\",\n      slantLabels: \"1\",\n      numdisplaysets: \"7200\",\n      showLabels: false,\n      labeldisplay: \"rotate\",\n      showValues: \"0\",\n      showRealTimeValue: \"0\",\n      theme: \"fusion\",\n      decimals: 4,\n      drawanchors: false,\n      numDivLines: 10,\n      setAdaptiveYMin: true,\n    },\n    categories: [\n      {\n        category: [\n          {\n            label: clientDateTime().toString(),\n          },\n        ],\n      },\n    ],\n    dataset: [\n      {\n        seriesname: \"ETH\",\n        parentyaxis: \"P\",\n        data: [\n          {\n            value: 0,\n          },\n        ],\n      },\n      {\n        seriesname: \"BTC\",\n        parentyaxis: \"S\",\n        data: [\n          {\n            value: 0,\n          },\n        ],\n      },\n    ],\n  });\n\n  const chartConfigs = {\n    type: \"realtimelinedy\",\n    renderAt: \"chart-container\",\n    width: \"100%\",\n    height: \"550\",\n    dataFormat: \"json\",\n  };\n\n  const fetchAcountBalances = useCallback(async () => {\n    console.log(\"getting account balances\");\n    try {\n      const acctBalances = await getAccounts();\n\n      setBalances(\n        acctBalances.reduce(\n          (valuesObj, item) => ({\n            ...valuesObj,\n            [item.type]: parseFloat(item.balance),\n          }),\n          {}\n        )\n      );\n\n      // setValues(vals);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchAcountBalances();\n    const refreshInterval = setInterval(() => {\n      fetchAcountBalances();\n    }, dayjs.duration(1, \"hours\").asMilliseconds());\n    return () => {\n      //console.log(\"clearing refreshInterval\");\n      clearInterval(refreshInterval);\n    };\n  }, [fetchAcountBalances]);\n\n  const processMsg = msgData => {\n    const data = JSON.parse(msgData);\n    data.bitcoin && setBtc(parseFloat(data.bitcoin));\n    data.xrp && setXrp(parseFloat(data.xrp));\n    data.ethereum && setEth(parseFloat(data.ethereum));\n    data.dogecoin && setDoge(parseFloat(data.dogecoin));\n  };\n\n  const updateDataSource = useCallback(() => {\n    const ds = dataSource.current;\n\n    ds.dataset[0][\"data\"][0].value === 0 &&\n      (ds.dataset[0][\"data\"][0].value = eth);\n    ds.dataset[1][\"data\"][0].value === 0 &&\n      (ds.dataset[1][\"data\"][0].value = btc);\n  }, [btc, eth]);\n\n  useEffect(() => {\n    let x_axis = clientDateTime();\n    let y_axis1 = eth;\n    let y_axis2 = btc;\n\n    updateDataSource();\n    showChart || toggleChart(true);\n\n    chartRef?.feedData?.(\n      \"&label=\" + x_axis + \"&value=\" + y_axis1 + \"|\" + y_axis2\n    );\n    //return () => chartRef.dispose();\n  }, [eth, btc, updateDataSource, showChart]);\n\n  const startWs = useCallback(() => {\n    ws.current = new WebSocket(\n      \"wss://ws.coincap.io/prices?assets=bitcoin,ethereum,xrp,dogecoin\"\n    );\n    ws.current.onopen = () => {\n      startTime = dayjs();\n      console.log(`connection opened.`);\n    };\n    ws.current.onclose = () => {\n      stopTime = dayjs();\n      const duration = dayjs.duration(stopTime.diff(startTime));\n      console.log(`connection closed. \\\n      Total uptime: ${getElapsedTime(duration)}`);\n      console.log(\"socket closed. Restart in 2 seconds\");\n      setTimeout(() => {\n        ws.readyState === WebSocket.Closed && startWs();\n      }, 2000);\n    };\n    ws.current.onmessage = msg => {\n      processMsg(msg.data);\n    };\n  }, []);\n\n  useEffect(() => {\n    startWs();\n    return () => ws.current.close();\n  }, [startWs]);\n\n  const getChartRef = chart => {\n    //console.log(\"getting new chartRef\");\n    chartRef = chart;\n  };\n\n  const totalBalance = () => {\n    return Object.keys(balances)\n      .reduce((total, k) => {\n        let value = 0;\n        try {\n          value = eval(k.toLowerCase());\n        } catch (e) {\n          value = 0;\n        }\n        return total + balances[k] * value;\n      }, 0)\n      .toFixed(2);\n\n    // return Object.values(values)\n    //   .reduce((total, v) => total + v)\n    //   .toFixed(2);\n  };\n  return (\n    <div className=\"row mt-5 mt-xs-4\">\n      <div className=\"header\">\n        <div className=\"balance\">Balance: {totalBalance()}</div>\n        {startTime && (\n          <div className=\"up-time\">\n            Uptime: {getElapsedTime(dayjs.duration(dayjs().diff(startTime)))}\n          </div>\n        )}\n      </div>\n\n      <div className=\"col-12 mb-3\">\n        <div className=\"card-deck custom-card-deck\">\n          <PriceCard\n            header=\"Bitcoin(BTC)\"\n            src={\"/bitcoin.png\"}\n            alt=\"fireSpot\"\n            label=\"(Price in USD)\"\n            value={btc}\n            balance={balances.BTC}\n          />\n          <PriceCard\n            header=\"Ripple(XRP)\"\n            src={\"/ripple-xrp.png\"}\n            alt=\"fireSpot\"\n            label=\"(Price in USD)\"\n            value={xrp}\n          />\n          <PriceCard\n            header=\"Ethereum(ETH)\"\n            src={\"/ethereum.png\"}\n            alt=\"fireSpot\"\n            label=\"(Price in USD)\"\n            value={eth}\n            balance={balances.ETH}\n          />\n          <PriceCard\n            header=\"DogeCoin\"\n            src={\"/doge.png\"}\n            alt=\"fireSpot\"\n            label=\"(Price in USD)\"\n            value={doge}\n          />\n        </div>\n      </div>\n      <div className=\"col-12\">\n        <div className=\"card custom-card mb-5 mb-xs-4\">\n          <div className=\"card-body\">\n            {showChart ? (\n              <ReactFC\n                {...chartConfigs}\n                dataSource={dataSource.current}\n                onRender={getChartRef}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyWSS;\n","/Users/rick/dev/react/react_bitcoin_ticker/src/components/utils.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/PriceCard.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/coinbase.api.js",[],"/Users/rick/dev/react/react_bitcoin_ticker/src/components/ChartJs.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":3,"nodeType":"59","messageId":"60","endLine":4,"endColumn":10},{"ruleId":"57","severity":1,"message":"61","line":16,"column":8,"nodeType":"59","messageId":"60","endLine":16,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":202,"column":19,"nodeType":"64","messageId":"65","endLine":202,"endColumn":23},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]